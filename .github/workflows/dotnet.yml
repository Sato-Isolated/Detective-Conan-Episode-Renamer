name: Build, Test and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'  # Utiliser la version appropriée de .NET

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --no-restore --verbosity normal

    - name: Publish
      run: dotnet publish --configuration Release --output ./output

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Upload release asset
      uses: actions/upload-artifact@v2
      with:
        name: my-app
        path: ./output/

    - name: Generate version number
      id: version
      run: echo "VERSION=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.VERSION }}
        release_name: Release v${{ env.VERSION }}
        body: |
          Changelog:
          - Première version
        draft: false
        prerelease: false

    - name: Archive built files
      run: |
        zip -r my-app-${{ env.VERSION }}.zip ./output
        echo "ARCHIVE=my-app-${{ env.VERSION }}.zip" >> $GITHUB_ENV

    - name: Upload to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.ARCHIVE }}
        asset_name: ${{ env.ARCHIVE }}
        asset_content_type: application/zip
